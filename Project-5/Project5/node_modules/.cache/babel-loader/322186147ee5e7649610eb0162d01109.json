{"ast":null,"code":"var _jsxFileName = \"/Users/vijayabalaji/Desktop/challenges/React-full-course/Project-5/Project5/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    console.log(action.item.amount);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      console.log(state);\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/vijayabalaji/Desktop/challenges/React-full-course/Project-5/Project5/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","console","log","item","amount","updatedTotalAmount","price","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAP,CAAYC,MAAxB;AACA,UAAMC,kBAAkB,GACtBP,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYC,MADtD;AAGA,UAAMG,qBAAqB,GAAGT,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAC3BL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACI,IAAP,CAAYM,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGZ,KAAK,CAACH,KAAN,CAAYY,qBAAZ,CAAzB;AACA,QAAII,YAAJ;;AAEA,QAAID,gBAAJ,EAAsB;AACpBT,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,YAAMc,WAAW,GAAG,EAClB,GAAGF,gBADe;AAElBN,QAAAA,MAAM,EAAEM,gBAAgB,CAACN,MAAjB,GAA0BL,MAAM,CAACI,IAAP,CAAYC;AAF5B,OAApB;AAIAO,MAAAA,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAf;AACAgB,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACD,KARD,MAQO;AACLD,MAAAA,YAAY,GAAGb,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBd,MAAM,CAACI,IAA1B,CAAf;AACD;;AAED,WAAO;AACLR,MAAAA,KAAK,EAAEgB,YADF;AAELf,MAAAA,WAAW,EAAES;AAFR,KAAP;AAID;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMO,qBAAqB,GAAGT,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAC3BL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACU,EADD,CAA9B;AAGA,UAAMK,YAAY,GAAGhB,KAAK,CAACH,KAAN,CAAYY,qBAAZ,CAArB;AACA,UAAMF,kBAAkB,GAAGP,KAAK,CAACF,WAAN,GAAoBkB,YAAY,CAACR,KAA5D;AACA,QAAIK,YAAJ;;AACA,QAAIG,YAAY,CAACV,MAAb,KAAwB,CAA5B,EAA+B;AAC7BO,MAAAA,YAAY,GAAGb,KAAK,CAACH,KAAN,CAAYoB,MAAZ,CAAoBZ,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACU,EAAhD,CAAf;AACD,KAFD,MAEO;AACL,YAAMG,WAAW,GAAG,EAAE,GAAGE,YAAL;AAAmBV,QAAAA,MAAM,EAAEU,YAAY,CAACV,MAAb,GAAsB;AAAjD,OAApB;AACAO,MAAAA,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAf;AACAgB,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACD;;AAED,WAAO;AACLjB,MAAAA,KAAK,EAAEgB,YADF;AAELf,MAAAA,WAAW,EAAES;AAFR,KAAP;AAID;;AAED,SAAOX,gBAAP;AACD,CAnDD;;AAqDA,MAAMsB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkC3B,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAM0B,oBAAoB,GAAIjB,IAAD,IAAU;AACrCgB,IAAAA,kBAAkB,CAAC;AAAEnB,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMkB,yBAAyB,GAAIZ,EAAD,IAAQ;AACxCU,IAAAA,kBAAkB,CAAC;AAAEnB,MAAAA,IAAI,EAAE,QAAR;AAAkBS,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMa,WAAW,GAAG;AAClB3B,IAAAA,KAAK,EAAEuB,SAAS,CAACvB,KADC;AAElBC,IAAAA,WAAW,EAAEsB,SAAS,CAACtB,WAFL;AAGlB2B,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMT,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    console.log(action.item.amount);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      console.log(state);\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}